spring.application.name=mall-ware

# springcloudtencent配置
# 注册中心配置
spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848

spring.cloud.nacos.discovery.namespace=mall-dev

# 配置中心配置
spring.cloud.nacos.config.server-addr=127.0.0.1:8848
spring.cloud.nacos.config.namespace=mall-dev

## 从配置中心中同时加载多个配置(拆分之后）
## 如数据源配置文件，mybatis配置文件，redis配置文件等等，读取了之后，会和本地的application组合
##导入一个文件
spring.cloud.nacos.config.extension-configs[0].data-id=mysql.yaml
spring.cloud.nacos.config.extension-configs[0].group=ware-config
spring.cloud.nacos.config.extension-configs[0].refresh=true


spring.cloud.nacos.config.extension-configs[1].data-id=mybatis.yaml
spring.cloud.nacos.config.extension-configs[1].group=ware-config
spring.cloud.nacos.config.extension-configs[1].refresh=true


spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.virtual-host=/
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# 开启发送端确认，消息抵达交换机的确认，属于生产者确认
spring.rabbitmq.publisher-confirm-type=simple
# 开启发送端消息抵达队列的确认，属于生产者确认
spring.rabbitmq.publisher-returns=true
# 只要抵达队列，以异步发送优先回调,属于生产者配置
spring.rabbitmq.template.mandatory=true

# 设置消费端手动签收
spring.rabbitmq.listener.direct.acknowledge-mode=manual
# 设置消费端手动签收
spring.rabbitmq.listener.simple.acknowledge-mode=manual








